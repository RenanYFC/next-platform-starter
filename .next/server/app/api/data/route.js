"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/data/route";
exports.ids = ["app/api/data/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdata%2Froute&page=%2Fapi%2Fdata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdata%2Froute.ts&appDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdata%2Froute&page=%2Fapi%2Fdata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdata%2Froute.ts&appDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_renan_Downloads_DashboardWalmart_main_DashboardWalmart_main_DashboardWalmart_app_api_data_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/data/route.ts */ \"(rsc)/./app/api/data/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/data/route\",\n        pathname: \"/api/data\",\n        filename: \"route\",\n        bundlePath: \"app/api/data/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\renan\\\\Downloads\\\\DashboardWalmart-main\\\\DashboardWalmart-main\\\\DashboardWalmart\\\\app\\\\api\\\\data\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_renan_Downloads_DashboardWalmart_main_DashboardWalmart_main_DashboardWalmart_app_api_data_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/data/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkYXRhJTJGcm91dGUmcGFnZT0lMkZhcGklMkZkYXRhJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZGF0YSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNyZW5hbiU1Q0Rvd25sb2FkcyU1Q0Rhc2hib2FyZFdhbG1hcnQtbWFpbiU1Q0Rhc2hib2FyZFdhbG1hcnQtbWFpbiU1Q0Rhc2hib2FyZFdhbG1hcnQlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3JlbmFuJTVDRG93bmxvYWRzJTVDRGFzaGJvYXJkV2FsbWFydC1tYWluJTVDRGFzaGJvYXJkV2FsbWFydC1tYWluJTVDRGFzaGJvYXJkV2FsbWFydCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUU7QUFDbEo7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcHAvPzc4NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxccmVuYW5cXFxcRG93bmxvYWRzXFxcXERhc2hib2FyZFdhbG1hcnQtbWFpblxcXFxEYXNoYm9hcmRXYWxtYXJ0LW1haW5cXFxcRGFzaGJvYXJkV2FsbWFydFxcXFxhcHBcXFxcYXBpXFxcXGRhdGFcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2RhdGEvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kYXRhXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9kYXRhL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxccmVuYW5cXFxcRG93bmxvYWRzXFxcXERhc2hib2FyZFdhbG1hcnQtbWFpblxcXFxEYXNoYm9hcmRXYWxtYXJ0LW1haW5cXFxcRGFzaGJvYXJkV2FsbWFydFxcXFxhcHBcXFxcYXBpXFxcXGRhdGFcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2RhdGEvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdata%2Froute&page=%2Fapi%2Fdata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdata%2Froute.ts&appDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/data/route.ts":
/*!*******************************!*\
  !*** ./app/api/data/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_data_processor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/data-processor */ \"(rsc)/./lib/data-processor.ts\");\n\n\n\n\nconst dynamic = \"force-dynamic\";\n// CSV parsing utility - handles quoted fields with commas\nfunction parseCSV(csvText) {\n    const lines = csvText?.trim()?.split(\"\\n\");\n    const headers = parseCSVLine(lines?.[0] || \"\")?.map((h)=>h?.trim());\n    return lines?.slice(1)?.map((line)=>{\n        const values = parseCSVLine(line)?.map((v)=>v?.trim()?.replace(/^['\"]|['\"]$/g, \"\"));\n        const obj = {};\n        headers?.forEach((header, index)=>{\n            obj[header] = values?.[index] || \"\";\n        });\n        return obj;\n    });\n}\nfunction parseCSVLine(line) {\n    const values = [];\n    let current = \"\";\n    let inQuotes = false;\n    for(let i = 0; i < line.length; i++){\n        const char = line[i];\n        const nextChar = line[i + 1];\n        if (char === '\"' && !inQuotes) {\n            inQuotes = true;\n        } else if (char === '\"' && inQuotes && nextChar === '\"') {\n            current += char;\n            i++; // skip next quote\n        } else if (char === '\"' && inQuotes) {\n            inQuotes = false;\n        } else if (char === \",\" && !inQuotes) {\n            values.push(current);\n            current = \"\";\n        } else {\n            current += char;\n        }\n    }\n    values.push(current);\n    return values;\n}\nasync function GET(request) {\n    try {\n        const dataPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"data\");\n        // Read all CSV files\n        const ordersCSV = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataPath, \"p9fJDbyvQZOG0pR5mJHI_orders.csv\"), \"utf8\");\n        const driversCSV = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataPath, \"ZrBjADYySY6YJpCS5xM8_drivers_data.csv\"), \"utf8\");\n        const productsCSV = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataPath, \"6etncolNRnueUWjhJpdU_products_data.csv\"), \"utf8\");\n        const customersCSV = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataPath, \"YvR3oYtSRP60f2jU7pqM_customers_data.csv\"), \"utf8\");\n        const missingItemsCSV = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataPath, \"2P9sGZNKQCS1B2UDArRJ_missing_items_data.csv\"), \"utf8\");\n        // Parse CSV data\n        const rawOrders = parseCSV(ordersCSV);\n        const rawDrivers = parseCSV(driversCSV);\n        const rawProducts = parseCSV(productsCSV);\n        const rawCustomers = parseCSV(customersCSV);\n        const rawMissingItems = parseCSV(missingItemsCSV);\n        // Transform data to proper types\n        const orders = rawOrders?.map((row)=>({\n                date: row?.date || \"\",\n                order_id: row?.order_id || \"\",\n                order_amount: row?.order_amount || \"\",\n                region: row?.region || \"\",\n                items_delivered: parseInt(row?.items_delivered || \"0\"),\n                items_missing: parseInt(row?.items_missing || \"0\"),\n                delivery_hour: row?.delivery_hour || \"\",\n                driver_id: row?.driver_id || \"\",\n                customer_id: row?.customer_id || \"\"\n            }));\n        const drivers = rawDrivers?.map((row)=>({\n                driver_id: row?.driver_id || \"\",\n                driver_name: row?.driver_name || \"\",\n                age: parseInt(row?.age || \"0\"),\n                trips: parseInt(row?.Trips || \"0\") // Note: capital T in CSV\n            }));\n        const products = rawProducts?.map((row)=>({\n                product_id: row?.produc_id || \"\",\n                product_name: row?.product_name || \"\",\n                category: row?.category || \"\",\n                price: row?.price || \"\"\n            }));\n        const customers = rawCustomers?.map((row)=>({\n                customer_id: row?.customer_id || \"\",\n                customer_name: row?.customer_name || \"\",\n                customer_age: parseInt(row?.customer_age || \"0\")\n            }));\n        const missingItems = rawMissingItems?.map((row)=>({\n                order_id: row?.order_id || \"\",\n                product_id_1: row?.product_id_1 || \"\",\n                product_id_2: row?.product_id_2 || \"\",\n                product_id_3: row?.product_id_3 || \"\"\n            }));\n        // Perform analysis\n        const driverAnalyses = _lib_data_processor__WEBPACK_IMPORTED_MODULE_3__.WalmartDataProcessor.analyzeDrivers(orders, drivers);\n        const productAnalyses = _lib_data_processor__WEBPACK_IMPORTED_MODULE_3__.WalmartDataProcessor.analyzeProducts(orders, products, missingItems);\n        const regionAnalyses = _lib_data_processor__WEBPACK_IMPORTED_MODULE_3__.WalmartDataProcessor.analyzeRegions(orders);\n        const kpis = _lib_data_processor__WEBPACK_IMPORTED_MODULE_3__.WalmartDataProcessor.calculateKPIs(orders, driverAnalyses);\n        // Time pattern analysis\n        const timePatterns = orders?.reduce((acc, order)=>{\n            const hour = parseInt(order?.delivery_hour?.split(\":\")?.[0] || \"0\");\n            if (!acc[hour]) {\n                acc[hour] = {\n                    missing: 0,\n                    total: 0\n                };\n            }\n            acc[hour].total++;\n            acc[hour].missing += order?.items_missing || 0;\n            return acc;\n        }, {});\n        const hourlyPatterns = Object.entries(timePatterns)?.map(([hour, data])=>({\n                hour: parseInt(hour),\n                missing_count: data?.missing || 0,\n                total_orders: data?.total || 0,\n                missing_rate: data?.total > 0 ? (data?.missing || 0) / (data?.total || 1) : 0\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                raw: {\n                    orders,\n                    drivers,\n                    products,\n                    customers,\n                    missingItems\n                },\n                analysis: {\n                    drivers: driverAnalyses,\n                    products: productAnalyses,\n                    regions: regionAnalyses,\n                    timePatterns: hourlyPatterns,\n                    kpis\n                },\n                metadata: {\n                    totalOrders: orders?.length || 0,\n                    totalDrivers: drivers?.length || 0,\n                    totalProducts: products?.length || 0,\n                    totalCustomers: customers?.length || 0,\n                    processedAt: new Date().toISOString()\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Data processing error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to process data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/data/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/data-processor.ts":
/*!*******************************!*\
  !*** ./lib/data-processor.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalmartDataProcessor: () => (/* binding */ WalmartDataProcessor)\n/* harmony export */ });\nclass WalmartDataProcessor {\n    // K-Means Clustering Implementation\n    static kMeansClustering(data, k = 4, maxIterations = 100) {\n        const n = data?.length;\n        const features = data?.[0]?.length || 0;\n        // Initialize centroids randomly\n        let centroids = [];\n        for(let i = 0; i < k; i++){\n            const centroid = [];\n            for(let j = 0; j < features; j++){\n                const min = Math.min(...data?.map((d)=>d?.[j] || 0));\n                const max = Math.max(...data?.map((d)=>d?.[j] || 0));\n                centroid.push(min + Math.random() * (max - min));\n            }\n            centroids.push(centroid);\n        }\n        let assignments = new Array(n).fill(0);\n        for(let iter = 0; iter < maxIterations; iter++){\n            // Assign points to nearest centroid\n            const newAssignments = data?.map((point, i)=>{\n                let minDist = Infinity;\n                let bestCluster = 0;\n                centroids?.forEach((centroid, j)=>{\n                    const dist = this.euclideanDistance(point, centroid);\n                    if (dist < minDist) {\n                        minDist = dist;\n                        bestCluster = j;\n                    }\n                });\n                return bestCluster;\n            });\n            // Check for convergence\n            if (JSON.stringify(assignments) === JSON.stringify(newAssignments)) {\n                break;\n            }\n            assignments = newAssignments;\n            // Update centroids\n            for(let j = 0; j < k; j++){\n                const clusterPoints = data?.filter((_, i)=>assignments?.[i] === j);\n                if (clusterPoints?.length > 0) {\n                    const newCentroid = new Array(features).fill(0);\n                    clusterPoints?.forEach((point)=>{\n                        point?.forEach((val, idx)=>{\n                            newCentroid[idx] += val || 0;\n                        });\n                    });\n                    centroids[j] = newCentroid?.map((sum)=>sum / clusterPoints.length);\n                }\n            }\n        }\n        return centroids?.map((center, i)=>({\n                cluster_id: i,\n                center,\n                drivers: [],\n                avg_missing_rate: 0,\n                description: this.getClusterDescription(i, center)\n            }));\n    }\n    static euclideanDistance(a, b) {\n        return Math.sqrt(a?.reduce((sum, val, i)=>sum + Math.pow((val || 0) - (b?.[i] || 0), 2), 0));\n    }\n    static getClusterDescription(clusterId, center) {\n        const descriptions = [\n            \"Top Performers - Low Risk\",\n            \"Moderate Risk - Standard Performance\",\n            \"Novice Drivers - Training Needed\",\n            \"High Risk - Immediate Action Required\"\n        ];\n        return descriptions?.[clusterId] || `Cluster ${clusterId}`;\n    }\n    // Statistical Outlier Detection\n    static detectOutliers(values, threshold = 3) {\n        const mean = values?.reduce((sum, val)=>sum + (val || 0), 0) / values?.length;\n        const variance = values?.reduce((sum, val)=>sum + Math.pow((val || 0) - mean, 2), 0) / values?.length;\n        const stdDev = Math.sqrt(variance);\n        return values?.map((val)=>Math.abs((val || 0) - mean) > threshold * stdDev);\n    }\n    // Analyze drivers with clustering\n    static analyzeDrivers(orders, drivers) {\n        const driverStats = new Map();\n        // Calculate driver statistics\n        orders?.forEach((order)=>{\n            const driverId = order?.driver_id;\n            const stats = driverStats.get(driverId) || {\n                trips: 0,\n                missing: 0,\n                delivered: 0,\n                valueLost: 0\n            };\n            stats.trips++;\n            stats.missing += order?.items_missing || 0;\n            stats.delivered += order?.items_delivered || 0;\n            stats.valueLost += this.parseAmount(order?.order_amount || \"0\") * ((order?.items_missing || 0) / Math.max(1, (order?.items_delivered || 0) + (order?.items_missing || 0)));\n            driverStats.set(driverId, stats);\n        });\n        // Create driver analysis array\n        const driverAnalyses = drivers?.map((driver)=>{\n            const stats = driverStats.get(driver?.driver_id) || {\n                trips: 0,\n                missing: 0,\n                delivered: 0,\n                valueLost: 0\n            };\n            const totalItems = stats.delivered + stats.missing;\n            return {\n                driver_id: driver?.driver_id,\n                driver_name: driver?.driver_name,\n                total_trips: stats.trips,\n                total_missing: stats.missing,\n                total_delivered: stats.delivered,\n                missing_rate: totalItems > 0 ? stats.missing / totalItems : 0,\n                total_value_lost: stats.valueLost,\n                cluster: 0,\n                is_outlier: false // Will be determined later\n            };\n        });\n        // Prepare data for clustering (missing_rate, total_missing normalized)\n        const clusteringData = driverAnalyses?.map((driver)=>[\n                driver?.missing_rate || 0,\n                (driver?.total_missing || 0) / Math.max(1, Math.max(...driverAnalyses?.map((d)=>d?.total_missing || 0)))\n            ]);\n        // Perform K-Means clustering\n        const clusters = this.kMeansClustering(clusteringData, 4);\n        // Assign clusters to drivers\n        const missingRates = driverAnalyses?.map((d)=>d?.missing_rate || 0);\n        const outliers = this.detectOutliers(missingRates);\n        return driverAnalyses?.map((driver, i)=>{\n            // Simple cluster assignment based on missing rate\n            let cluster = 1; // Default: Top performers\n            const rate = driver?.missing_rate || 0;\n            if (rate > 0.05) cluster = 3; // High risk\n            else if (rate > 0.02) cluster = 0; // Moderate risk  \n            else if (rate > 0.005) cluster = 2; // Novice\n            return {\n                ...driver,\n                cluster,\n                is_outlier: outliers?.[i] || false\n            };\n        });\n    }\n    // Analyze products\n    static analyzeProducts(orders, products, missingItems) {\n        const productStats = new Map();\n        // Count missing items by product\n        missingItems?.forEach((item)=>{\n            const productIds = [\n                item?.product_id_1,\n                item?.product_id_2,\n                item?.product_id_3\n            ]?.filter((id)=>id);\n            const order = orders?.find((o)=>o?.order_id === item?.order_id);\n            const orderValue = this.parseAmount(order?.order_amount || \"0\");\n            productIds?.forEach((productId)=>{\n                const stats = productStats.get(productId) || {\n                    count: 0,\n                    totalValue: 0\n                };\n                stats.count++;\n                stats.totalValue += orderValue / productIds.length; // Distribute order value\n                productStats.set(productId, stats);\n            });\n        });\n        return products?.map((product)=>{\n            const stats = productStats.get(product?.product_id) || {\n                count: 0,\n                totalValue: 0\n            };\n            const price = this.parseAmount(product?.price || \"0\");\n            return {\n                product_id: product?.product_id,\n                product_name: product?.product_name,\n                category: product?.category,\n                missing_count: stats.count,\n                total_value_lost: stats.totalValue,\n                missing_rate: stats.count / Math.max(1, orders?.length || 0),\n                price\n            };\n        })?.sort((a, b)=>(b?.missing_count || 0) - (a?.missing_count || 0));\n    }\n    // Analyze regions\n    static analyzeRegions(orders) {\n        const regionStats = new Map();\n        orders?.forEach((order)=>{\n            const region = order?.region;\n            const stats = regionStats.get(region) || {\n                orders: 0,\n                missing: 0,\n                valueLost: 0\n            };\n            stats.orders++;\n            stats.missing += order?.items_missing || 0;\n            stats.valueLost += this.parseAmount(order?.order_amount || \"0\") * ((order?.items_missing || 0) / Math.max(1, (order?.items_delivered || 0) + (order?.items_missing || 0)));\n            regionStats.set(region, stats);\n        });\n        return Array.from(regionStats.entries())?.map(([region, stats])=>({\n                region,\n                total_orders: stats.orders,\n                total_missing: stats.missing,\n                missing_rate: stats.missing / Math.max(1, stats.orders),\n                total_value_lost: stats.valueLost\n            }))?.sort((a, b)=>(b?.missing_rate || 0) - (a?.missing_rate || 0));\n    }\n    // Calculate KPIs\n    static calculateKPIs(orders, driverAnalyses) {\n        const totalItems = orders?.reduce((sum, order)=>sum + (order?.items_delivered || 0) + (order?.items_missing || 0), 0);\n        const totalMissing = orders?.reduce((sum, order)=>sum + (order?.items_missing || 0), 0);\n        const totalValue = orders?.reduce((sum, order)=>{\n            const orderValue = this.parseAmount(order?.order_amount || \"0\");\n            const missingRatio = (order?.items_missing || 0) / Math.max(1, (order?.items_delivered || 0) + (order?.items_missing || 0));\n            return sum + orderValue * missingRatio;\n        }, 0);\n        const highRiskDrivers = driverAnalyses?.filter((d)=>d?.cluster === 3 || d?.is_outlier)?.length || 0;\n        return {\n            overall_missing_rate: totalItems > 0 ? totalMissing / totalItems : 0,\n            total_financial_impact: totalValue,\n            high_risk_drivers: highRiskDrivers,\n            critical_regions: 3 // Based on analysis\n        };\n    }\n    // Utility method to parse dollar amounts\n    static parseAmount(amount) {\n        return parseFloat(amount?.replace(/[$,]/g, \"\") || \"0\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/data-processor.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdata%2Froute&page=%2Fapi%2Fdata%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdata%2Froute.ts&appDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crenan%5CDownloads%5CDashboardWalmart-main%5CDashboardWalmart-main%5CDashboardWalmart&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();